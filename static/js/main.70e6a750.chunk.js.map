{"version":3,"sources":["components/inputs/Slider.js","lib/box.js","stores/state.js","components/inputs/Controls.js","components/svg/Flexbox.js","components/SVGBox.js","components/Tabs.js","components/Three.js","App.js","index.js"],"names":["RangeSlider","title","value","onChange","Function","prototype","min","max","step","unit","className","type","event","target","arr2vec","arr","x","y","vec2arr","vec","Vector","center","v1","v2","scale","s","add","sub","dot","travel","from","to","dist","Math","sqrt","pow","length","rotate90","rotate90m","norm","makeEdge","sort","fromArr","toArr","side","finger","thickness","width","direction","includes","pos","dir","start","end","p0","p1","makeFinger","makeSide","name","ctx","edgeCtx","map","point","join","props","store","height","depth","result","sides","bindInputToStoreProp","prop","parseFloat","autoEffect","console","log","top","bottom","front","back","left","right","makeBox","Object","entries","forEach","range","f","t","Controls","view","Flexbox","childRefs","shouldUpdateAgain","state","layout","children","this","forceUpdate","onLayout","style","childrenMeasured","getChildrenMeasured","flattenedChildren","getFlattenedChildren","childrenAsMergedStyles","getChildrenAsMergedStyles","getComputedLayout","setState","Array","isArray","filter","child","reduce","previous","current","concat","childMeasured","index","childRef","getBBox","findDOMNode","childrenWithMergedStyles","computeLayout","layoutChild","offset","r","cx","cy","rx","ry","transform","layoutChildren","getLayoutChildren","React","cloneElement","getLayoutAttributesForChild","key","ref","node","push","Component","defaultProps","SVGPath","path","d","Flexitem","rest","lineStyles","line1","fill","stroke","strokeWidth","line2","line3","viewBox","padding","flexDirection","justifyContent","flexWrap","Tabs","context","activeTabIndex","defaultActiveTabIndex","handleTabClick","bind","tabIndex","Children","onClick","isActive","renderChildrenWithTabsApiAsProps","renderActiveTabContent","Tab","linkClassName","href","preventDefault","Box","mesh","useRef","useState","hovered","setHover","active","setActive","useFrame","onPointerOver","onPointerOut","args","color","extend","OrbitControls","triangleShape","THREE","Extruded","rotation","bevelEnabled","bevelSegments","bevelOffset","steps","bevelSize","bevelThickness","CameraControls","useThree","camera","domElement","gl","controls","update","Three","position","DebugPath","JSON","stringify","App","border","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70e6a750.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Slider.css\";\n\nconst RangeSlider = ({\n  title,\n  value,\n  onChange = Function.prototype,\n  min = 100,\n  max = 1000,\n  step = 50,\n  unit = \"mm\",\n}) => {\n  return (\n    <div className=\"range-slider\">\n      <span className=\"range-slider__title\">{title}</span>\n      <input\n        value={value}\n        type=\"range\"\n        min={min}\n        max={max}\n        step={step}\n        onChange={(event) => onChange(event.target.value)}\n      />\n      <span className=\"range-slider__value\">\n        {value} {unit}\n      </span>\n    </div>\n  );\n};\n\nexport default RangeSlider;\n","const arr2vec = (arr) => ({ x: arr[0], y: arr[1] });\nconst vec2arr = (vec) => [vec.x, vec.y];\nconst Vector = {\n  center: (v1, v2) => ({ x: (v1.x + v2.x) / 2, y: (v1.y + v2.y) / 2 }),\n  scale: (v1, s) => ({ x: v1.x * s, y: v1.y * s }),\n  add: (v1, v2) => ({ x: v1.x + v2.x, y: v1.y + v2.y }),\n  sub: (v1, v2) => ({ x: v1.x - v2.x, y: v1.y - v2.y }),\n  dot: (v1, v2) => ({ x: v1.x * v2.y, y: v1.x * v2.y }),\n  travel: (from, to, s) =>\n    Vector.add(from, Vector.scale(Vector.sub(to, from), s)),\n  dist: (v1, v2) =>\n    Math.sqrt(Math.pow(v2.x - v1.x, 2) + Math.pow(v2.y - v1.y, 2)),\n  length: (v1) => Math.sqrt(v1.x * v1.x + v1.y * v1.y),\n  rotate90: (v1) => ({ x: -v1.y, y: v1.x }),\n  rotate90m: (v1) => ({ x: v1.y, y: -v1.x }),\n  norm: (v1) => Vector.scale(v1, 1 / Vector.length(v1)),\n};\n\nfunction toSVGPath(points) {\n  const path = points.map((point) => `L${point[0]} ${point[1]}`).join(\" \");\n  return [\"M0 0\", path, \"Z\"].join(\" \");\n}\n\nexport function makeDado(from, to) {}\n\nexport function makeFinger(from, to, pos, width, direction, thickness) {\n  let dir = Vector.norm(Vector.sub(to, from));\n  if (direction === \"out\") {\n    dir = Vector.scale(dir, -1);\n  }\n\n  let dist = Vector.dist(from, to);\n\n  if (dist === 0) {\n    dist = 100.0;\n  }\n\n  const start = Vector.travel(to, from, pos + width / dist);\n  const end = Vector.travel(to, from, pos - width / dist);\n  const p0 = Vector.add(start, Vector.scale(Vector.rotate90(dir), thickness));\n  const p1 = Vector.add(end, Vector.scale(Vector.rotate90(dir), thickness));\n\n  return [vec2arr(start), vec2arr(p0), vec2arr(p1), vec2arr(end)];\n}\n\nexport function makeEdge(sort, fromArr, toArr, { side, finger, thickness }) {\n  const from = arr2vec(fromArr);\n  const to = arr2vec(toArr);\n\n  const position = 0.5;\n  const width = finger;\n\n  const isInside = () =>\n    [\"right\", \"left\"].includes(side) && (sort === 0 || sort === 2);\n  const isTopBottom = () => [\"top\", \"bottom\"].includes(side);\n\n  const direction = isTopBottom() || isInside() ? \"in\" : \"out\";\n\n  return [\n    vec2arr(from),\n    ...makeFinger(from, to, position, width, direction, thickness),\n    vec2arr(to),\n  ];\n}\n\nexport function makeSide(name, x, y, ctx) {\n  const edgeCtx = { side: name, ...ctx };\n  return toSVGPath([\n    ...makeEdge(0, [0, 0], [x, 0], edgeCtx),\n    ...makeEdge(1, [x, 0], [x, y], edgeCtx),\n    ...makeEdge(2, [x, y], [0, y], edgeCtx),\n    ...makeEdge(3, [0, y], [0, 0], edgeCtx),\n  ]);\n}\n\nexport function makeBox({ width, height, depth, finger = 20, thickness = 10 }) {\n  console.log(\"makeBox\", { width, height, depth, finger, thickness });\n\n  const ctx = { width, height, depth, finger, thickness };\n\n  return {\n    top: makeSide(\"top\", height, width, ctx),\n    bottom: makeSide(\"bottom\", height, width, ctx),\n    front: makeSide(\"front\", height, depth, ctx),\n    back: makeSide(\"back\", height, depth, ctx),\n    left: makeSide(\"left\", depth, width, ctx),\n    right: makeSide(\"right\", depth, width, ctx),\n  };\n}\n","import { autoEffect, store } from \"@risingstack/react-easy-state\";\nimport { makeBox } from \"../lib/box\";\n\nexport const props = store({\n  width: 100,\n  height: 200,\n  depth: 600,\n  finger: 20,\n  thickness: 10,\n});\n\nexport const result = store({\n  sides: {},\n});\n\nautoEffect(() => {\n  const sides = makeBox(props);\n  Object.entries(sides).forEach(([name, side]) => (result.sides[name] = side));\n});\n","import React from \"react\";\nimport { view } from \"@risingstack/react-easy-state\";\n\nimport Slider from \"./Slider\";\nimport { props } from \"../../stores/state\";\n\nfunction bindInputToStoreProp(prop) {\n  return {\n    value: props[prop],\n    onChange: (value) => (props[prop] = parseFloat(value)),\n  };\n}\n\nconst range = (f, t, s) => ({ min: f, max: t, step: s });\n\nconst Controls = view(() => {\n  return (\n    <div className=\"control-box\">\n      <Slider title=\"height\" {...bindInputToStoreProp(\"height\")} />\n      <Slider title=\"width\" {...bindInputToStoreProp(\"width\")} />\n      <Slider title=\"depth\" {...bindInputToStoreProp(\"depth\")} />\n      <Slider\n        title=\"thickness\"\n        {...bindInputToStoreProp(\"thickness\")}\n        {...range(0, 15, 1)}\n      />\n      <Slider\n        title=\"finger\"\n        {...bindInputToStoreProp(\"finger\")}\n        {...range(10, 100, 1)}\n      />\n    </div>\n  );\n});\n\nexport default Controls;\n","import React from \"react\";\nimport { findDOMNode } from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport computeLayout from \"css-layout\";\n\nexport default class Flexbox extends React.Component {\n  static propTypes = {\n    children: PropTypes.array,\n    className: PropTypes.string,\n    onLayout: PropTypes.func,\n    style: PropTypes.object,\n    x: PropTypes.number,\n    y: PropTypes.number,\n  };\n\n  static defaultProps = {\n    children: [],\n    className: null,\n    onLayout: () => {},\n    style: {},\n    x: 0,\n    y: 0,\n  };\n\n  constructor() {\n    super();\n    this.childRefs = [];\n    this.shouldUpdateAgain = false;\n    this.state = {\n      layout: {\n        children: [],\n      },\n    };\n  }\n\n  componentDidMount() {\n    // Force update for initial layout.\n    this.forceUpdate();\n  }\n\n  componentDidUpdate() {\n    /*\n    SVG elements must be added to the DOM before they\n    can be measured. This means that each update\n    requires two render passes: one to add elements\n    to the DOM, another to measure them and do layout.\n    SVG elements cannot be measured before they've\n    been added to the DOM. To this end, we use a simple\n    on/off switch to determine whether or not we should\n    set layout on state again.\n    */\n    this.shouldUpdateAgain = !this.shouldUpdateAgain;\n\n    if (this.shouldUpdateAgain) {\n      const { children, onLayout, style } = this.props;\n\n      // Measure child elements.\n      const childrenMeasured = this.getChildrenMeasured(this.childRefs);\n\n      // Merge measurements with passed styles.\n      const flattenedChildren = this.getFlattenedChildren(children);\n      const childrenAsMergedStyles = this.getChildrenAsMergedStyles(\n        flattenedChildren,\n        childrenMeasured\n      );\n\n      // Compute layout.\n      const layout = this.getComputedLayout(childrenAsMergedStyles, style);\n\n      // Pass layout to any concerned parent.\n      onLayout(layout);\n\n      // Trigger an update with the new layout.\n      /* eslint-disable react/no-did-update-set-state */\n      this.setState({ layout });\n      /* eslint-enable react/no-did-update-set-state */\n    }\n  }\n\n  /*\n  Returns children flattened into a single array.\n\n  If this component is asked to lay out a combination\n  of individually declared components/elements, and\n  an array of the same returned from a map operation,\n  React will throw an error. This can be prevented\n  by flattening children out into a single array.\n  */\n  getFlattenedChildren(children) {\n    return Array.isArray(children)\n      ? children\n          // Filter out null indexes:\n          .filter((child) => child)\n          // Filter out string literals:\n          .filter((child) => typeof child !== \"string\")\n          // Ensure that all children are arrays:\n          .map((child) => (Array.isArray(child) ? child : [child]))\n          // Flatten into a single array:\n          .reduce((previous, current) => previous.concat(current), [])\n      : [children];\n  }\n\n  /*\n  Returns child props merged with child measurements.\n\n  If the child has explicit styles for width and height,\n  those will be used. If those styles are not present,\n  we will use measured widths and heights.\n  */\n  getChildrenAsMergedStyles(children, childrenMeasured) {\n    return childrenMeasured.map((childMeasured, index) => {\n      const child = children[index] || {};\n      const style = child && child.props ? child.props.style : {};\n      return {\n        style: {\n          ...style,\n          height: childMeasured.height || style.height,\n          width: childMeasured.width || style.width,\n        },\n      };\n    });\n  }\n\n  /*\n  Returns width and height measurements for children.\n\n  You can pass explicit width and height styles for child elements,\n  but usually it's most convenient to let this component measure\n  them for you and use those numbers for layout.\n  */\n  getChildrenMeasured(childRefs) {\n    /* eslint-disable react/no-find-dom-node */\n    return childRefs && childRefs.length\n      ? childRefs.map((childRef) =>\n          childRef.getBBox\n            ? childRef.getBBox()\n            : findDOMNode(childRef).getBBox()\n        )\n      : [];\n    /* eslint-enable react/no-find-dom-node */\n  }\n\n  /*\n  Returns values computed by css-layout.\n  */\n  getComputedLayout(childrenWithMergedStyles, style) {\n    const layout = {\n      children: Array.from(childrenWithMergedStyles || []),\n      style: { ...style },\n    };\n    computeLayout(layout);\n    return layout;\n  }\n\n  /*\n  Digs into a layout object and returns the array of children.\n  */\n  getLayoutChildren(layout) {\n    if (layout && layout.children && layout.children.length) {\n      return layout.children;\n    }\n    return [];\n  }\n\n  /*\n  Returns an object containing layout properties for a child element.\n  Different types of SVG elements require different types of layout.\n  */\n  getLayoutAttributesForChild(child, layoutChild) {\n    if (layoutChild && layoutChild.layout) {\n      const { left, top } = layoutChild.layout;\n      switch (child.type) {\n        case \"circle\": {\n          /*\n          Offset is used to position the circle from\n          its top left corner, not its center.\n          */\n          const offset = child.props.r || 0;\n          return {\n            cx: left + offset,\n            cy: top + offset,\n          };\n        }\n        case \"ellipse\": {\n          /*\n          Offset is used to position the ellipse from\n          its top left corner, not its center.\n          */\n          const offsetX = child.props.rx || 0;\n          const offsetY = child.props.ry || 0;\n          return {\n            cx: left + offsetX,\n            cy: top + offsetY,\n          };\n        }\n        case \"g\":\n        case \"path\":\n        case \"polygon\":\n        case \"polyline\":\n          return {\n            transform: `translate(${left} ${top})`,\n          };\n        default:\n          return {\n            x: left,\n            y: top,\n          };\n      }\n    }\n    return {};\n  }\n\n  render() {\n    const { children, className, x, y } = this.props;\n    const { layout } = this.state;\n\n    /*\n    Re-create an array of refs on each render.\n\n    We will store references to child components,\n    in case they need to be measured on the next update.\n\n    After consulting the relevant documentation -\n    https://reactjs.org/docs/refs-and-the-dom.html#exposing-dom-refs-to-parent-components\n    - this seemed to be the best available approach.\n    */\n    this.childRefs = [];\n\n    const flattenedChildren = this.getFlattenedChildren(children);\n    const layoutChildren = this.getLayoutChildren(layout);\n\n    return (\n      <g className={className} transform={`translate(${x} ${y})`}>\n        {flattenedChildren.map((child, index) => {\n          return React.cloneElement(child, {\n            ...child.props,\n            ...this.getLayoutAttributesForChild(child, layoutChildren[index]),\n            /* eslint-disable react/no-array-index-key */\n            key: `child-${index}`,\n            /* eslint-enable react/no-array-index-key */\n            ref: (node) => (node ? this.childRefs.push(node) : null),\n          });\n        })}\n      </g>\n    );\n  }\n}\n","import React from \"react\";\nimport Flexbox from \"./svg/Flexbox\";\nimport { view } from \"@risingstack/react-easy-state\";\nimport { result } from \"../stores/state\";\n\nimport \"./svg.css\";\n\nconst SVGPath = view(({ style, title, path }) => {\n  const [x, y] = [0, 0];\n  return (\n    <g transform={`translate(${x}, ${y})`}>\n      <text x=\"0\" y=\"0\" className=\"title\">\n        {title}\n      </text>\n      <g transform=\"translate(0, 5) scale(0.5)\">\n        <path d={path} {...style} />\n      </g>\n    </g>\n  );\n});\n\nclass Flexitem extends React.Component {\n  render() {\n    const { x = 0, y = 0, ...rest } = this.props;\n    return (\n      <g transform={`translate(${x}, ${y})`}>\n        <SVGPath {...rest} />\n      </g>\n    );\n  }\n}\nconst lineStyles = {\n  line1: { fill: \"none\", stroke: \"white\", strokeWidth: 0.5 },\n  line2: { fill: \"none\", stroke: \"white\", strokeWidth: 1.5 },\n  line3: { fill: \"none\", stroke: \"white\", strokeWidth: 2.5 },\n};\n\nexport default view(function SVGBox() {\n  return (\n    <svg viewBox={[0, 0, 1000, 1000]}>\n      <Flexbox\n        style={{\n          width: 1000,\n          height: 1000,\n          padding: 20,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {Object.entries(result.sides).map(([name, side]) => (\n          <Flexitem\n            key={name}\n            title={name}\n            path={side}\n            style={lineStyles.line2}\n          />\n        ))}\n      </Flexbox>\n    </svg>\n  );\n});\n","import React from \"react\";\n\nexport class Tabs extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      activeTabIndex: this.props.defaultActiveTabIndex,\n    };\n    this.handleTabClick = this.handleTabClick.bind(this);\n  }\n\n  // Toggle currently active tab\n  handleTabClick(tabIndex) {\n    this.setState({\n      activeTabIndex:\n        tabIndex === this.state.activeTabIndex\n          ? this.props.defaultActiveTabIndex\n          : tabIndex,\n    });\n  }\n\n  // Encapsulate <Tabs/> component API as props for <Tab/> children\n  renderChildrenWithTabsApiAsProps() {\n    return React.Children.map(this.props.children, (child, index) => {\n      return React.cloneElement(child, {\n        onClick: this.handleTabClick,\n        tabIndex: index,\n        isActive: index === this.state.activeTabIndex,\n      });\n    });\n  }\n\n  // Render current active tab content\n  renderActiveTabContent() {\n    const { children } = this.props;\n    const { activeTabIndex } = this.state;\n    if (children[activeTabIndex]) {\n      return children[activeTabIndex].props.children;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"tabs\">\n        <ul className=\"tabs-nav nav navbar-nav navbar-left\">\n          {this.renderChildrenWithTabsApiAsProps()}\n        </ul>\n        <div className=\"tabs-active-content\">\n          {this.renderActiveTabContent()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const Tab = ({\n  title,\n  tabIndex,\n  isActive = false,\n  onClick = Function.prototype,\n  linkClassName = \"\",\n}) => {\n  return (\n    <li className=\"tab\">\n      <a\n        href=\"/\"\n        className={`tab-link ${linkClassName} ${isActive ? \"active\" : \"\"}`}\n        onClick={(event) => {\n          event.preventDefault();\n          onClick(tabIndex);\n        }}\n      >\n        {/* <i className={`tab-icon ${props.iconClassName}`} /> */}\n        {title}\n      </a>\n    </li>\n  );\n};\n","import React, { useRef, useState } from 'react'\nimport { Canvas, useThree, useFrame, extend } from 'react-three-fiber'\nimport * as THREE from 'three'\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\n// Extend will make OrbitControls available as a JSX element called orbitControls for us to use.extend({ OrbitControls });\nextend({ OrbitControls });\n\nfunction Box(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => {\n    // mesh.current.rotation.x = mesh.current.rotation.y += 0.01\n  })\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n      onClick={(event) => setActive(!active)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}>\n      <boxBufferGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n    </mesh>\n  )\n}\n\n// const triangleShape = new THREE.Shape()\n//   .moveTo(0, 0)\n//   .lineTo(0, 1)\n//   .lineTo(1, 1)\n//   .lineTo(0, 0); // close path\n\n// const points = triangleShape.getPoints();\n// console.log(points);\n\nconst triangleShape = new THREE.Shape([\n  new THREE.Vector2(0, 0), \n  new THREE.Vector2(0, 1), \n  new THREE.Vector2(1, 1), \n  new THREE.Vector2(0, 0)\n])\n// .moveTo(0, 0)\n// .lineTo(0, 1)\n// .lineTo(1, 1)\n// .lineTo(0, 0); // close path\n\nfunction Extruded(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n\n  useFrame(() => {\n    mesh.current.rotation.y += 0.001\n  })\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      onClick={(event) => setActive(!active)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}>\n      <extrudeBufferGeometry args={[triangleShape, active ? {\n        depth: 0.15 - 2 * 0.025,\n        bevelEnabled: true,\n        bevelSegments: 1,\n        bevelOffset: -0.025,\n        steps: 1,\n        bevelSize: 0.025,\n        bevelThickness: 0.025\n      } : { depth: 0.15, bevelEnabled: false, }]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'green'} />\n    </mesh>\n  )\n}\n\n\nconst CameraControls = () => {\n  // Get a reference to the Three.js Camera, and the canvas html element.  \n  // We need these to setup the OrbitControls component.  \n  // https://threejs.org/docs/#examples/en/controls/OrbitControls  \n\n  const { camera, gl: { domElement }, } = useThree();\n\n  // Ref to the controls, so that we can update them on every frame using useFrame  \n  const controls = useRef();\n  useFrame((state) => controls.current.update());\n  return <orbitControls ref={controls} args={[camera, domElement]} />;\n};\n\nexport default function Three() {\n  return (\n    <Canvas style={{ height: '100vh' }}>\n      <CameraControls />\n      <ambientLight />\n      <pointLight position={[10, 10, 10]} />\n      <Extruded position={[0, 0, 0]} />\n      <Box position={[-1.2, 0, 0]} />\n      <Box position={[1.2, 0, 0]} />\n    </Canvas>\n  )\n}\n","import { view } from \"@risingstack/react-easy-state\";\n\nimport Controls from \"./components/inputs/Controls\";\nimport SVGBox from \"./components/SVGBox\";\nimport { Tabs, Tab } from \"./components/Tabs\";\nimport Three from \"./components/Three\";\nimport { result, props } from \"./stores/state\";\n\nconst DebugPath = view(() => {\n  return (\n    <div style={{ padding: \"1rem\" }}>\n      <pre>props = {JSON.stringify(props, null, 2)}</pre>\n      <pre>sides = {JSON.stringify(result.sides, null, 2)}</pre>\n    </div>\n  );\n});\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Controls />\n      <Tabs defaultActiveTabIndex={0}>\n        <Tab title=\"2D\">\n          <div className=\"svg-box\">\n            <SVGBox />\n          </div>\n        </Tab>\n        <Tab title=\"3D\">\n          <div style={{ border: \"2px solid black\" }}>\n            <Three />\n          </div>\n        </Tab>\n        <Tab title=\"Text\">\n          <div className=\"svg-box\">\n            <DebugPath />\n          </div>\n        </Tab>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}